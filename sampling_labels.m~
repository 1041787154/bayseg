function MID_list=sampling_labels(Element,MID_list,Mset,T,para_scanorder,num_of_color,y,mu,SIGMA,beta)
% mu is k by d
% SIGMA is d by d by k

n_Mset=length(Mset);

for i=1:num_of_color
    
    pointer=para_scanorder{i};
    n=sum(pointer>0);    
    temp_y = y(pointer,:);    
    %temp_Element = Element(pointer);
    temp_U = Element.SelfU(pointer,:);
    
    temp_MID_list_old = MID_list(pointer);
    temp_MID_list_new = temp_MID_list_old;
    
    parfor idx=1:n
        if ~isnan(temp_MID_list_old(idx))
            U=temp_U(i); % assign the energy of sigle site clique
            for k=1:n_Mset
                C=SIGMA(:,:,k);
                Uy=0.5*(temp_y(idx,:)-mu(k,:))/C*(temp_y(idx,:)-mu(k,:))'+0.5*log(det(C));
                U(k)=U(k)+Uy; % add the likelihood energy
            end
            n_neighbor=length(temp_Element(idx).Neighbors);
            %display(n_neighbor);
            M_center = ones(n_neighbor,1)*Mset;
            %display(M_center);
            M_neighbor = MID_list(temp_Element(idx).Neighbors)*ones(1,n_Mset);
            %display(M_neighbor);
            is_zero = (M_center==M_neighbor) | isnan(M_neighbor);
            %display(is_zero);
            M_beta = temp_Element(idx).Direction*beta*ones(1,n_Mset); % beta is n_direction-by-1 vector.
            %display(M_beta);
            M_beta(is_zero) = 0;
            %display(M_beta);
            U = U + sum(M_beta);
            %====calculate the probability of each label===============================
            P=exp(-U/T)/sum(exp(-U/T));
            %==========================================================================
            temp_MID_list_new(idx)=GenMID(Mset,P',1);
        end        
    end    
    MID_list(pointer)=temp_MID_list_new;           
end
end